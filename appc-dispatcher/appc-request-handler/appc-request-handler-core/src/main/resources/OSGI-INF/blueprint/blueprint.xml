<?xml version="1.0" encoding="UTF-8"?>
<!--
  ============LICENSE_START=======================================================
  ONAP : APPC
  ================================================================================
  Copyright (C) 2017 AT&T Intellectual Property. All rights reserved.
  ================================================================================
  Copyright (C) 2017 Amdocs
  =============================================================================
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
       http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  
  ECOMP is a trademark and service mark of AT&T Intellectual Property.
  ============LICENSE_END=========================================================
  -->

<!--
    Starter Blueprint Camel Definition appc-aai-adapter-blueprint
-->
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd">
    <bean id="vnfRequestHandlerBean" class="org.onap.appc.requesthandler.impl.RequestHandlerImpl" scope="singleton" >
    	<property name="commandExecutor" ref="commandExecutorRef" />
        <property name="requestValidator" ref="vnfRequestValidatorBean" />
        <property name="lockManager" ref="lockManagerRef" />
        <property name="workingStateManager" ref="workingStateManagerBean"/>
        <property name="transactionRecorder" ref="transactionRecorderRef" />
    </bean>

    <bean id="vmRequestHandlerBean" class="org.onap.appc.requesthandler.impl.VMRequestHandlerImpl" scope="singleton" >
        <property name="commandExecutor" ref="commandExecutorRef" />
        <property name="requestValidator" ref="vmRequestValidatorBean" />
        <property name="transactionRecorder" ref="transactionRecorderRef" />
    </bean>

    <bean id="vnfRequestValidatorBean" class="org.onap.appc.requesthandler.impl.RequestValidatorImpl" scope="singleton" >
        <property name="lifecyclemanager" ref="lifecyclemanagerRef" />
        <property name="workflowManager" ref="workflowManagerRef" />
        <property name="workingStateManager" ref="workingStateManagerBean" />
        <property name="lcmStateManager" ref="lcmStateManagerBean" />
    </bean>

    <bean id="vmRequestValidatorBean" class="org.onap.appc.requesthandler.impl.VMRequestValidatorImpl" scope="singleton">
        <property name="workflowManager" ref="workflowManagerRef" />
        <property name="lcmStateManager" ref="lcmStateManagerBean" />
    </bean>

    <bean id="lcmStateManagerBean" class="org.onap.appc.requesthandler.impl.LCMStateManagerImpl" scope="singleton" />

    <service id="vmRequestHandlerService" interface="org.onap.appc.requesthandler.RequestHandler" ref="vmRequestHandlerBean">
        <service-properties>
            <entry key="level">
                <value type="java.lang.String">VM</value>
            </entry>
        </service-properties>
    </service>
    <service id="vnfRequestHandlerService" interface="org.onap.appc.requesthandler.RequestHandler" ref="vnfRequestHandlerBean">
        <service-properties>
            <entry key="level">
                <value type="java.lang.String">VNF</value>
            </entry>
        </service-properties>
    </service>
    <service id="lcmStateManagerService" interface="org.onap.appc.requesthandler.LCMStateManager" ref="lcmStateManagerBean"/>
    <reference id="lifecyclemanagerRef" availability="mandatory" activation="eager" interface="org.onap.appc.lifecyclemanager.LifecycleManager" />
    <reference id="workflowManagerRef" availability="mandatory" activation="eager" interface="org.onap.appc.workflow.WorkFlowManager" />
    <reference id="commandExecutorRef" availability="optional" activation="eager" interface="org.onap.appc.executor.CommandExecutor" />
    <reference id="lockManagerRef" availability="mandatory" activation="eager" interface="org.onap.appc.lockmanager.api.LockManager" />
    <reference id="transactionRecorderRef" availability="mandatory" activation="eager" interface="org.onap.appc.transactionrecorder.TransactionRecorder" />
    <reference xmlns:ext="http://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.0.0" ext:proxy-method="classes" id="aaiServiceRef" availability="mandatory" activation="eager" interface="org.onap.ccsdk.sli.adaptors.aai.AAIService" />

    <bean id="workingStateManagerBean" class="org.onap.appc.workingstatemanager.impl.WorkingStateManagerImpl" scope="singleton" >
        <property name="connectionFactory">
            <bean class="org.onap.appc.dao.util.AppcJdbcConnectionFactory">
                <property name="schema" value="sdnctl"/>
    </bean>
        </property>
    </bean>

</blueprint>
