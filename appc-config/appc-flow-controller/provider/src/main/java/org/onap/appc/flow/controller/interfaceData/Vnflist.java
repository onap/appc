/*-
 * ============LICENSE_START=======================================================
 * ONAP : APP-C
 * ================================================================================
 * Copyright (C) 2017 AT&T Intellectual Property.  All rights reserved.
 * ================================================================================
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ============LICENSE_END=========================================================
 */

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.07.03 at 03:13:44 PM EDT 
//


package org.onap.appc.flow.controller.interfaceData;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for vnflist.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="vnflist">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Restart"/>
 *     &lt;enumeration value="Rebuild"/>
 *     &lt;enumeration value="Migrate"/>
 *     &lt;enumeration value="Evacuate"/>
 *     &lt;enumeration value="Snapshot"/>
 *     &lt;enumeration value="Rollback"/>
 *     &lt;enumeration value="Sync"/>
 *     &lt;enumeration value="Audit"/>
 *     &lt;enumeration value="Start"/>
 *     &lt;enumeration value="Stop"/>
 *     &lt;enumeration value="Terminate"/>
 *     &lt;enumeration value="SoftwareUpload"/>
 *     &lt;enumeration value="HealthCheck"/>
 *     &lt;enumeration value="LiveUpgrade"/>
 *     &lt;enumeration value="ModifyConfig"/>
 *     &lt;enumeration value="Lock"/>
 *     &lt;enumeration value="Unlock"/>
 *     &lt;enumeration value="Test"/>
 *     &lt;enumeration value="CheckLock"/>
 *     &lt;enumeration value="Configure"/>
 *     &lt;enumeration value="ConfigModify"/>
 *     &lt;enumeration value="ConfigScaleOut"/>
 *     &lt;enumeration value="ConfigRestore"/>
 *     &lt;enumeration value="ConfigBackup"/>
 *     &lt;enumeration value="ConfigBackupDelete"/>
 *     &lt;enumeration value="ConfigExport"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "vnflist")
@XmlEnum
public enum Vnflist {

    @XmlEnumValue("Restart")
    RESTART("Restart"),
    @XmlEnumValue("Rebuild")
    REBUILD("Rebuild"),
    @XmlEnumValue("Migrate")
    MIGRATE("Migrate"),
    @XmlEnumValue("Evacuate")
    EVACUATE("Evacuate"),
    @XmlEnumValue("Snapshot")
    SNAPSHOT("Snapshot"),
    @XmlEnumValue("Rollback")
    ROLLBACK("Rollback"),
    @XmlEnumValue("Sync")
    SYNC("Sync"),
    @XmlEnumValue("Audit")
    AUDIT("Audit"),
    @XmlEnumValue("Start")
    START("Start"),
    @XmlEnumValue("Stop")
    STOP("Stop"),
    @XmlEnumValue("Terminate")
    TERMINATE("Terminate"),
    @XmlEnumValue("SoftwareUpload")
    SOFTWARE_UPLOAD("SoftwareUpload"),
    @XmlEnumValue("HealthCheck")
    HEALTH_CHECK("HealthCheck"),
    @XmlEnumValue("LiveUpgrade")
    LIVE_UPGRADE("LiveUpgrade"),
    @XmlEnumValue("ModifyConfig")
    MODIFY_CONFIG("ModifyConfig"),
    @XmlEnumValue("Lock")
    LOCK("Lock"),
    @XmlEnumValue("Unlock")
    UNLOCK("Unlock"),
    @XmlEnumValue("Test")
    TEST("Test"),
    @XmlEnumValue("CheckLock")
    CHECK_LOCK("CheckLock"),
    @XmlEnumValue("Configure")
    CONFIGURE("Configure"),
    @XmlEnumValue("ConfigModify")
    CONFIG_MODIFY("ConfigModify"),
    @XmlEnumValue("ConfigScaleOut")
    CONFIG_SCALE_OUT("ConfigScaleOut"),
    @XmlEnumValue("ConfigRestore")
    CONFIG_RESTORE("ConfigRestore"),
    @XmlEnumValue("ConfigBackup")
    CONFIG_BACKUP("ConfigBackup"),
    @XmlEnumValue("ConfigBackupDelete")
    CONFIG_BACKUP_DELETE("ConfigBackupDelete"),
    @XmlEnumValue("ConfigExport")
    CONFIG_EXPORT("ConfigExport");
    private final String value;

    Vnflist(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static Vnflist fromValue(String v) {
        for (Vnflist c: Vnflist.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
