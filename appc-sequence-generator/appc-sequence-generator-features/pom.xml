<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.onap.appc</groupId>
    <artifactId>appc-sequence-generator</artifactId>
    <version>1.3.0-SNAPSHOT</version>
  </parent>
  <artifactId>appc-sequence-generator-features</artifactId>
  <name>Application Controller Sequence Generator Features</name>

  <dependencies>
    <dependency>
      <groupId>org.onap.appc</groupId>
      <artifactId>appc-sequence-generator-bundle</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.onap.appc</groupId>
      <artifactId>appc-sequence-generator-model</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.opendaylight.mdsal</groupId>
      <artifactId>features-mdsal</artifactId>
      <classifier>features</classifier>
      <type>xml</type>

      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.opendaylight.yangtools</groupId>
      <artifactId>features-yangtools</artifactId>
      <classifier>features</classifier>
      <type>xml</type>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.onap.appc</groupId>
      <artifactId>appc-dg-domain-model-lib</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.onap.appc</groupId>
      <artifactId>appc-dg-dependency-model</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.onap.appc</groupId>
      <artifactId>appc-common</artifactId>
      <version>${project.version}</version>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <resource>
        <filtering>true</filtering>
        <directory>src/main/resources</directory>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>filter</id>
            <goals>
              <goal>resources</goal>
            </goals>
            <phase>generate-resources</phase>
          </execution>
        </executions>
      </plugin>
      <!--<plugin>
        &lt;!&ndash; launches the feature test, which validates that your karaf feature
            can be installed inside of a karaf container. It doesn't validate that your
            functionality works correctly, just that you have all of the dependent bundles
            defined correctly. &ndash;&gt;
        &lt;!&ndash; Skipping ODL feature test &ndash;&gt;
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.16</version>
        <configuration>
          <systemPropertyVariables>
            <karaf.distro.groupId>org.opendaylight.controller</karaf.distro.groupId>
            <karaf.distro.artifactId>opendaylight-karaf-empty</karaf.distro.artifactId>
            <karaf.distro.version>${odl.karaf.empty.distro.version}</karaf.distro.version>
          </systemPropertyVariables>
          <dependenciesToScan>
            <dependency>org.opendaylight.yangtools:features-test</dependency>
          </dependenciesToScan>
          <classpathDependencyExcludes>
            &lt;!&ndash; The dependencies which bring in AbstractDataBrokerTest class brings
                in a second PaxExam container which results in the feature tests failing
                with a message similar to: "ERROR o.ops4j.pax.exam.spi.PaxExamRuntime - Ambiguous
                TestContainer ..." This excludes the container we don't want to use. &ndash;&gt;
            <classpathDependencyExcludes>org.ops4j.pax.exam:pax-exam-container-native</classpathDependencyExcludes>
          </classpathDependencyExcludes>
          <skipTests>true</skipTests>
        </configuration>
      </plugin>-->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-artifacts</id>
            <goals>
              <goal>attach-artifact</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <artifacts>
                <artifact>
                  <file>${project.build.directory}/classes/${features.file}</file>
                  <type>xml</type>
                  <classifier>features</classifier>
                </artifact>
              </artifacts>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
